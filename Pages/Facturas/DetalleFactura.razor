@page "/facturas/{FacturaId:int}"
@using FacturacionPortal.WEB.Models.Facturacion
@using FacturacionPortal.WEB.Services.Interface
@using FacturacionPortal.WEB.Shared.Components
@using FacturacionPortal.WEB.Components.Shared
@using FacturacionPortal.WEB.Shared.Features.CalculadoraFactura
@using FacturacionPortal.WEB.Helpers
@using FacturacionPortal.WEB.Util
@using FacturacionPortal.WEB.Util.Extensions
@using Microsoft.AspNetCore.Components.Authorization
@inject IFacturaService FacturaService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Factura @(Factura?.NumeroFactura ?? FacturaId.ToString()) - FacturacionPortal</PageTitle>

<div class="detalle-factura-container">
    @if (IsLoading)
    {
        <Loading IsVisible="true" Text="Cargando factura..." />
    }
    else if (Factura != null)
    {
        <!-- Header -->
        <div class="factura-header mb-4">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <div class="d-flex align-items-center">
                        <div class="me-3">
                            <i class="bi bi-receipt-cutoff text-primary display-6"></i>
                        </div>
                        <div>
                            <h1 class="mb-1">Factura @Factura.NumeroFactura</h1>
                            <div class="d-flex align-items-center gap-3">
                                <span class="text-muted">ID: @Factura.Id</span>
                                <StatusBadge Status="@Factura.Estado" />
                                <small class="text-muted">
                                    <i class="bi bi-calendar me-1"></i>
                                    @Factura.Fecha.ToColombiaLongDateString()
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 text-end">
                    <div class="btn-group">
                        <button class="btn btn-outline-secondary" @onclick="GoBack">
                            <i class="bi bi-arrow-left me-1"></i>Volver
                        </button>
                        <button class="btn btn-outline-primary" @onclick="ImprimirFactura">
                            <i class="bi bi-printer me-1"></i>Imprimir
                        </button>
                        <button class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                            <i class="bi bi-three-dots"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            @if (Factura.Estado == "Activa")
                            {
                                <li>
                                    <button class="dropdown-item" @onclick="EditarFactura">
                                        <i class="bi bi-pencil me-2"></i>Editar
                                    </button>
                                </li>
                                <li>
                                    <button class="dropdown-item" @onclick="DuplicarFactura">
                                        <i class="bi bi-files me-2"></i>Duplicar
                                    </button>
                                </li>
                                <li><hr class="dropdown-divider"></li>
                                <li>
                                    <button class="dropdown-item text-warning" @onclick="AnularFactura">
                                        <i class="bi bi-x-circle me-2"></i>Anular Factura
                                    </button>
                                </li>
                            }
                            else
                            {
                                <li>
                                    <button class="dropdown-item" @onclick="DuplicarFactura">
                                        <i class="bi bi-files me-2"></i>Duplicar
                                    </button>
                                </li>
                            }
                            <li><hr class="dropdown-divider"></li>
                            <li>
                                <button class="dropdown-item" @onclick="ExportarPDF">
                                    <i class="bi bi-file-pdf me-2"></i>Exportar PDF
                                </button>
                            </li>
                            <li>
                                <button class="dropdown-item" @onclick="EnviarPorEmail">
                                    <i class="bi bi-envelope me-2"></i>Enviar por Email
                                </button>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <Alert @ref="AlertComponent" />

        <div class="row g-4">
            <!-- Columna Principal -->
            <div class="col-lg-8">
                <!-- Información del Cliente -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-person me-2"></i>Información del Cliente
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="cliente-info">
                                    <h6 class="fw-bold mb-2">@Factura.ClienteNombreCompleto</h6>
                                    <div class="info-item">
                                        <small class="text-muted">Documento:</small>
                                        <span class="fw-bold">@Factura.ClienteNumeroDocumento</span>
                                    </div>
                                    <div class="info-item">
                                        <small class="text-muted">Teléfono:</small>
                                        <span>@Factura.ClienteTelefono</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-item">
                                    <small class="text-muted">Dirección:</small>
                                    <span>@Factura.ClienteDireccion</span>
                                </div>
                                <div class="info-item mt-2">
                                    <button class="btn btn-outline-primary btn-sm" @onclick="VerPerfilCliente">
                                        <i class="bi bi-person-lines-fill me-1"></i>Ver Perfil Completo
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Detalles de Artículos -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-box-seam me-2"></i>Artículos Facturados
                        </h5>
                        <span class="badge bg-primary">@Factura.TotalArticulos artículo(s)</span>
                    </div>
                    <div class="card-body p-0">
                        @if (Factura.Detalles?.Any() == true)
                        {
                            <div class="table-responsive">
                                <table class="table table-hover mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th style="width: 60px;">#</th>
                                            <th>Artículo</th>
                                            <th class="text-center" style="width: 100px;">Cantidad</th>
                                            <th class="text-end" style="width: 120px;">Precio Unit.</th>
                                            <th class="text-end" style="width: 120px;">Subtotal</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var (detalle, index) in Factura.Detalles.Select((d, i) => (d, i + 1)))
                                        {
                                            <tr>
                                                <td>
                                                    <span class="badge bg-secondary">@index</span>
                                                </td>
                                                <td>
                                                    <div>
                                                        <div class="fw-bold">@detalle.ArticuloNombre</div>
                                                        <small class="text-muted">Código: @detalle.ArticuloCodigo</small>
                                                        @if (!string.IsNullOrEmpty(detalle.ArticuloDescripcion))
                                                        {
                                                            <div><small class="text-muted">@detalle.ArticuloDescripcion</small></div>
                                                        }
                                                    </div>
                                                </td>
                                                <td class="text-center">
                                                    <span class="badge bg-info">@detalle.Cantidad</span>
                                                </td>
                                                <td class="text-end">
                                                    <CurrencyDisplay Value="@detalle.PrecioUnitario" ShowSymbol="true" />
                                                </td>
                                                <td class="text-end">
                                                    <CurrencyDisplay Value="@detalle.Subtotal" ShowSymbol="true" CssClass="fw-bold" />
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                    <tfoot class="table-light">
                                        <tr>
                                            <td colspan="3" class="text-end fw-bold">Total Artículos:</td>
                                            <td class="text-center fw-bold">@Factura.TotalCantidad</td>
                                            <td class="text-end fw-bold">
                                                <CurrencyDisplay Value="@Factura.SubTotal" ShowSymbol="true" CssClass="text-primary" />
                                            </td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-4">
                                <i class="bi bi-box display-4 text-muted"></i>
                                <div class="mt-2 text-muted">No hay artículos en esta factura</div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Observaciones -->
                @if (!string.IsNullOrEmpty(Factura.Observaciones))
                {
                    <div class="card shadow-sm mb-4">
                        <div class="card-header">
                            <h6 class="card-title mb-0">
                                <i class="bi bi-chat-text me-2"></i>Observaciones
                            </h6>
                        </div>
                        <div class="card-body">
                            <p class="mb-0">@Factura.Observaciones</p>
                        </div>
                    </div>
                }

                <!-- Información Adicional -->
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h6 class="card-title mb-0">
                            <i class="bi bi-info-circle me-2"></i>Información Adicional
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="info-item">
                                    <small class="text-muted">Creado por:</small>
                                    <div class="fw-bold">@(Factura.CreadoPor ?? "Sistema")</div>
                                </div>
                                <div class="info-item">
                                    <small class="text-muted">Fecha de creación:</small>
                                    <div>@Factura.FechaCreacion.ToColombiaLongDateString()</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                @if (Factura.FechaModificacion.HasValue)
                                {
                                    <div class="info-item">
                                        <small class="text-muted">Modificado por:</small>
                                        <div class="fw-bold">@(Factura.ModificadoPor ?? "Sistema")</div>
                                    </div>
                                    <div class="info-item">
                                        <small class="text-muted">Última modificación:</small>
                                        <div>@Factura.FechaModificacion.Value.ToColombiaLongDateString()</div>
                                    </div>
                                }
                                else
                                {
                                    <div class="text-muted">Sin modificaciones</div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Columna Lateral: Resumen y Totales -->
            <div class="col-lg-4">
                <!-- Resumen de Factura -->
                <div class="card shadow-sm mb-4 factura-summary">
                    <div class="card-header text-center">
                        <h5 class="card-title mb-0 text-white">Resumen de Factura</h5>
                    </div>
                    <div class="card-body">
                        <!-- Calculadora de totales -->
                        <CalculadoraTotales Totales="@ObtenerTotales()"
                                            ItemCount="@Factura.TotalArticulos"
                                            TotalQuantity="@Factura.TotalCantidad"
                                            ShowHeader="false"
                                            ShowBreakdown="true"
                                            ShowActions="false"
                                            ShowPaymentInfo="false"
                                            ShowCalculateButton="false" />
                    </div>
                </div>

                <!-- Estado y Acciones -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header">
                        <h6 class="card-title mb-0">
                            <i class="bi bi-gear me-2"></i>Estado y Acciones
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="text-center mb-3">
                            <div class="estado-indicator @GetEstadoClass()">
                                <i class="@GetEstadoIcon() me-2"></i>
                                @Factura.Estado
                            </div>
                        </div>

                        <div class="d-grid gap-2">
                            @if (Factura.Estado == "Activa")
                            {
                                <button class="btn btn-primary" @onclick="EditarFactura">
                                    <i class="bi bi-pencil me-1"></i>Editar Factura
                                </button>
                                <button class="btn btn-outline-warning" @onclick="AnularFactura">
                                    <i class="bi bi-x-circle me-1"></i>Anular Factura
                                </button>
                            }
                            
                            <button class="btn btn-outline-primary" @onclick="DuplicarFactura">
                                <i class="bi bi-files me-1"></i>Duplicar Factura
                            </button>
                            
                            <button class="btn btn-outline-secondary" @onclick="ImprimirFactura">
                                <i class="bi bi-printer me-1"></i>Imprimir
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Historial de Cambios -->
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h6 class="card-title mb-0">
                            <i class="bi bi-clock-history me-2"></i>Historial
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="timeline">
                            <div class="timeline-item">
                                <div class="timeline-marker bg-success"></div>
                                <div class="timeline-content">
                                    <small class="text-muted">@Factura.FechaCreacion.ToColombiaShortDateString()</small>
                                    <div class="fw-bold">Factura Creada</div>
                                    <small>Por: @(Factura.CreadoPor ?? "Sistema")</small>
                                </div>
                            </div>
                            
                            @if (Factura.FechaModificacion.HasValue)
                            {
                                <div class="timeline-item">
                                    <div class="timeline-marker bg-warning"></div>
                                    <div class="timeline-content">
                                        <small class="text-muted">@Factura.FechaModificacion.Value.ToColombiaShortDateString()</small>
                                        <div class="fw-bold">Factura Modificada</div>
                                        <small>Por: @(Factura.ModificadoPor ?? "Sistema")</small>
                                    </div>
                                </div>
                            }

                            @if (Factura.Estado == "Anulada")
                            {
                                <div class="timeline-item">
                                    <div class="timeline-marker bg-danger"></div>
                                    <div class="timeline-content">
                                        <small class="text-muted">Fecha de anulación</small>
                                        <div class="fw-bold">Factura Anulada</div>
                                        <small>Motivo: Anulación solicitada</small>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="bi bi-exclamation-triangle display-1 text-warning"></i>
            <h3 class="mt-3">Factura no encontrada</h3>
            <p class="text-muted">La factura solicitada no existe o no tiene permisos para verla.</p>
            <div class="mt-3">
                <button class="btn btn-primary" @onclick='() => Navigation.NavigateTo("/facturas")'>
                    <i class="bi bi-arrow-left me-1"></i>Volver a Facturas
                </button>
                <button class="btn btn-outline-secondary ms-2" @onclick="RecargarFactura">
                    <i class="bi bi-arrow-clockwise me-1"></i>Reintentar
                </button>
            </div>
        </div>
    }
</div>

<Confirm @ref="ConfirmDialog" />

<style>
    .detalle-factura-container {
        padding: 1rem;
    }

    .factura-header {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        padding: 1.5rem;
        border-radius: 0.5rem;
        border-left: 4px solid var(--bs-primary);
    }

    .factura-summary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

    .factura-summary .card-header {
        background: rgba(255, 255, 255, 0.1);
        border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    }

    .cliente-info h6 {
        color: var(--bs-primary);
    }

    .info-item {
        margin-bottom: 0.5rem;
    }

    .info-item:last-child {
        margin-bottom: 0;
    }

    .estado-indicator {
        padding: 0.75rem 1.5rem;
        border-radius: 50px;
        font-weight: 600;
        font-size: 1.1rem;
    }

    .estado-activa {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
    }

    .estado-anulada {
        background: linear-gradient(135deg, #dc3545, #fd7e14);
        color: white;
    }

    .estado-pagada {
        background: linear-gradient(135deg, #007bff, #6610f2);
        color: white;
    }

    .estado-pendiente {
        background: linear-gradient(135deg, #ffc107, #fd7e14);
        color: #212529;
    }

    .timeline {
        position: relative;
        padding-left: 2rem;
    }

    .timeline::before {
        content: '';
        position: absolute;
        left: 0.5rem;
        top: 0;
        bottom: 0;
        width: 2px;
        background: var(--bs-border-color);
    }

    .timeline-item {
        position: relative;
        margin-bottom: 1.5rem;
    }

    .timeline-item:last-child {
        margin-bottom: 0;
    }

    .timeline-marker {
        position: absolute;
        left: -1.75rem;
        top: 0.25rem;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        border: 2px solid white;
        box-shadow: 0 0 0 2px var(--bs-border-color);
    }

    .timeline-content {
        padding-left: 0.5rem;
    }

    .card {
        border: none;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }

    .card-header {
        background-color: var(--bs-light);
        border-bottom: 1px solid var(--bs-border-color);
    }

    .table th {
        font-weight: 600;
        font-size: 0.875rem;
    }

    .table td {
        vertical-align: middle;
    }

    .dropdown-menu {
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        border: none;
    }

    @@media (max-width: 768px) {
        .factura-header {
            padding: 1rem;
        }

        .estado-indicator {
            font-size: 1rem;
            padding: 0.5rem 1rem;
        }

        .timeline {
            padding-left: 1.5rem;
        }

        .timeline-marker {
            left: -1.25rem;
        }
    }
</style>

@code {
    [Parameter] public int FacturaId { get; set; }

    private FacturaDto? Factura;
    private Alert? AlertComponent;
    private Confirm? ConfirmDialog;
    private bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await CargarFactura();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Factura?.Id != FacturaId)
        {
            await CargarFactura();
        }
    }

    private async Task CargarFactura()
    {
        try
        {
            IsLoading = true;
            StateHasChanged();

            var result = await FacturaService.GetById(FacturaId);
            if (result.Success && result.Data != null)
            {
                Factura = result.Data;
                
                // Cargar detalles si no están incluidos
                if (Factura.Detalles?.Any() != true)
                {
                    await CargarDetalles();
                }
            }
            else
            {
                Factura = null;
                if (!string.IsNullOrEmpty(result.Message))
                {
                    AlertComponent?.Show(result.Message, AlertType.Warning);
                }
            }
        }
        catch (Exception ex)
        {
            Factura = null;
            AlertComponent?.Show($"Error al cargar la factura: {ex.Message}", AlertType.Danger);
        }
        finally
        {
            IsLoading = false;
            StateHasChanged();
        }
    }

     private async Task GoBack()
    {
        try
        {
            // Usa el módulo JavaScript para navegar hacia atrás
            var success = await JSRuntime.InvokeAsync<bool>("navigationManager.goBack");
            if (!success)
            {
                // Si no se puede navegar hacia atrás, ir a la página de inicio
                Navigation.NavigateTo("/");
            }
        }
        catch
        {
            // Si falla, navega a una ruta predeterminada
            Navigation.NavigateTo("/");
        }
    }

    private async Task CargarDetalles()
    {
        if (Factura == null) return;

        try
        {
            var result = await FacturaService.GetDetalles(Factura.Id);
            if (result.Success && result.Data != null)
            {
                Factura.Detalles = result.Data;
            }
        }
        catch (Exception ex)
        {
            AlertComponent?.Show($"Error al cargar detalles: {ex.Message}", AlertType.Warning);
        }
    }

    private async Task RecargarFactura()
    {
        await CargarFactura();
    }

    private FacturaTotalesDto ObtenerTotales()
    {
        if (Factura == null) return new FacturaTotalesDto();

        return new FacturaTotalesDto
        {
            SubTotal = Factura.SubTotal,
            PorcentajeDescuento = Factura.PorcentajeDescuento,
            ValorDescuento = Factura.ValorDescuento,
            BaseImpuestos = Factura.BaseImpuestos,
            PorcentajeIVA = Factura.PorcentajeIVA,
            ValorIVA = Factura.ValorIVA,
            Total = Factura.Total,
            AplicaDescuento = Factura.ValorDescuento > 0
        };
    }

    private string GetEstadoClass()
    {
        return Factura?.Estado?.ToLower() switch
        {
            "activa" => "estado-activa",
            "anulada" => "estado-anulada",
            "pagada" => "estado-pagada",
            "pendiente" => "estado-pendiente",
            _ => "estado-activa"
        };
    }

    private string GetEstadoIcon()
    {
        return Factura?.Estado?.ToLower() switch
        {
            "activa" => "bi bi-check-circle-fill",
            "anulada" => "bi bi-x-circle-fill",
            "pagada" => "bi bi-credit-card-fill",
            "pendiente" => "bi bi-clock-fill",
            _ => "bi bi-circle-fill"
        };
    }

    // Acciones
    private void EditarFactura()
    {
        Navigation.NavigateTo($"/facturas/{FacturaId}/editar");
    }

    private void DuplicarFactura()
    {
        Navigation.NavigateTo($"/facturas/crear?duplicar={FacturaId}");
    }

    private void VerPerfilCliente()
    {
        // Necesitarías obtener el ID del cliente de la factura
        Navigation.NavigateTo("/clientes");
    }

    private async Task AnularFactura()
    {
        if (Factura == null || ConfirmDialog == null) return;

        var confirmado = await ConfirmDialog.ShowAsync(
            "Anular Factura",
            $"¿Está seguro que desea anular la factura {Factura.NumeroFactura}? Esta acción no se puede deshacer.",
            ConfirmType.Danger
        );

        if (confirmado)
        {
            try
            {
                var result = await FacturaService.Anular(FacturaId, "Anulada desde detalle de factura");
                if (result.Success)
                {
                    AlertComponent?.Show("Factura anulada exitosamente", AlertType.Success);
                    await CargarFactura();
                }
                else
                {
                    AlertComponent?.Show(result.Message ?? "Error al anular la factura", AlertType.Danger);
                }
            }
            catch (Exception ex)
            {
                AlertComponent?.Show($"Error: {ex.Message}", AlertType.Danger);
            }
        }
    }

    private async Task ImprimirFactura()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("window.print");
        }
        catch (Exception ex)
        {
            AlertComponent?.Show($"Error al imprimir: {ex.Message}", AlertType.Warning);
        }
    }

    private async Task ExportarPDF()
    {
        AlertComponent?.Show("Función de exportación a PDF próximamente disponible", AlertType.Info);
        await Task.CompletedTask;
    }

    private async Task EnviarPorEmail()
    {
        AlertComponent?.Show("Función de envío por email próximamente disponible", AlertType.Info);
        await Task.CompletedTask;
    }
}